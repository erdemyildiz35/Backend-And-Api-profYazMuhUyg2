{"ast":null,"code":"import { EventEmitter, Component, forwardRef, ElementRef, NgZone, Input, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { getEditorNamespace } from 'ckeditor4-integrations-common';\n/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\nimport * as ɵngcc0 from '@angular/core';\n\nfunction CKEditorComponent_ng_template_0_Template(rf, ctx) {}\n\nclass CKEditorComponent {\n  constructor(elementRef, ngZone) {\n    this.elementRef = elementRef;\n    this.ngZone = ngZone;\n    /**\n     * CKEditor 4 script url address. Script will be loaded only if CKEDITOR namespace is missing.\n     *\n     * Defaults to 'https://cdn.ckeditor.com/4.20.0/standard-all/ckeditor.js'\n     */\n\n    this.editorUrl = 'https://cdn.ckeditor.com/4.20.0/standard-all/ckeditor.js';\n    /**\n     * Tag name of the editor component.\n     *\n     * The default tag is `textarea`.\n     */\n\n    this.tagName = 'textarea';\n    /**\n     * The type of the editor interface.\n     *\n     * By default editor interface will be initialized as `classic` editor.\n     * You can also choose to create an editor with `inline` interface type instead.\n     *\n     * See https://ckeditor.com/docs/ckeditor4/latest/guide/dev_uitypes.html\n     * and https://ckeditor.com/docs/ckeditor4/latest/examples/fixedui.html\n     * to learn more.\n     */\n\n    this.type = \"classic\"\n    /* CLASSIC */\n    ;\n    /**\n     * Fired when the CKEDITOR https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR.html namespace\n     * is loaded. It only triggers once, no matter how many CKEditor 4 components are initialised.\n     * Can be used for convenient changes in the namespace, e.g. for adding external plugins.\n     */\n\n    this.namespaceLoaded = new EventEmitter();\n    /**\n     * Fires when the editor is ready. It corresponds with the `editor#instanceReady`\n     * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#event-instanceReady\n     * event.\n     */\n\n    this.ready = new EventEmitter();\n    /**\n     * Fires when the editor data is loaded, e.g. after calling setData()\n     * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#method-setData\n     * editor's method. It corresponds with the `editor#dataReady`\n     * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#event-dataReady event.\n     */\n\n    this.dataReady = new EventEmitter();\n    /**\n     * Fires when the content of the editor has changed. It corresponds with the `editor#change`\n     * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#event-change\n     * event. For performance reasons this event may be called even when data didn't really changed.\n     * Please note that this event will only be fired when `undo` plugin is loaded. If you need to\n     * listen for editor changes (e.g. for two-way data binding), use `dataChange` event instead.\n     */\n\n    this.change = new EventEmitter();\n    /**\n     * Fires when the content of the editor has changed. In contrast to `change` - only emits when\n     * data really changed thus can be successfully used with `[data]` and two way `[(data)]` binding.\n     *\n     * See more: https://angular.io/guide/template-syntax#two-way-binding---\n     */\n\n    this.dataChange = new EventEmitter();\n    /**\n     * Fires when the native dragStart event occurs. It corresponds with the `editor#dragstart`\n     * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#event-dragstart\n     * event.\n     */\n\n    this.dragStart = new EventEmitter();\n    /**\n     * Fires when the native dragEnd event occurs. It corresponds with the `editor#dragend`\n     * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#event-dragend\n     * event.\n     */\n\n    this.dragEnd = new EventEmitter();\n    /**\n     * Fires when the native drop event occurs. It corresponds with the `editor#drop`\n     * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#event-drop\n     * event.\n     */\n\n    this.drop = new EventEmitter();\n    /**\n     * Fires when the file loader response is received. It corresponds with the `editor#fileUploadResponse`\n     * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#event-fileUploadResponse\n     * event.\n     */\n\n    this.fileUploadResponse = new EventEmitter();\n    /**\n     * Fires when the file loader should send XHR. It corresponds with the `editor#fileUploadRequest`\n     * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#event-fileUploadRequest\n     * event.\n     */\n\n    this.fileUploadRequest = new EventEmitter();\n    /**\n     * Fires when the editing area of the editor is focused. It corresponds with the `editor#focus`\n     * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#event-focus\n     * event.\n     */\n\n    this.focus = new EventEmitter();\n    /**\n     * Fires after the user initiated a paste action, but before the data is inserted.\n     * It corresponds with the `editor#paste`\n     * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#event-paste\n     * event.\n     */\n\n    this.paste = new EventEmitter();\n    /**\n     * Fires after the `paste` event if content was modified. It corresponds with the `editor#afterPaste`\n     * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#event-afterPaste\n     * event.\n     */\n\n    this.afterPaste = new EventEmitter();\n    /**\n     * Fires when the editing view of the editor is blurred. It corresponds with the `editor#blur`\n     * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#event-blur\n     * event.\n     */\n\n    this.blur = new EventEmitter();\n    /**\n     * If the component is read–only before the editor instance is created, it remembers that state,\n     * so the editor can become read–only once it is ready.\n     */\n\n    this._readOnly = null;\n    this._data = null;\n    this._destroyed = false;\n  }\n  /**\n   * Keeps track of the editor's data.\n   *\n   * It's also decorated as an input which is useful when not using the ngModel.\n   *\n   * See https://angular.io/api/forms/NgModel to learn more.\n   */\n\n\n  set data(data) {\n    if (data === this._data) {\n      return;\n    }\n\n    if (this.instance) {\n      this.instance.setData(data); // Data may be changed by ACF.\n\n      this._data = this.instance.getData();\n      return;\n    }\n\n    this._data = data;\n  }\n\n  get data() {\n    return this._data;\n  }\n  /**\n   * When set to `true`, the editor becomes read-only.\n   *\n   * See https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#property-readOnly\n   * to learn more.\n   */\n\n\n  set readOnly(isReadOnly) {\n    if (this.instance) {\n      this.instance.setReadOnly(isReadOnly);\n      return;\n    } // Delay setting read-only state until editor initialization.\n\n\n    this._readOnly = isReadOnly;\n  }\n\n  get readOnly() {\n    if (this.instance) {\n      return this.instance.readOnly;\n    }\n\n    return this._readOnly;\n  }\n\n  ngAfterViewInit() {\n    getEditorNamespace(this.editorUrl, namespace => {\n      this.namespaceLoaded.emit(namespace);\n    }).then(() => {\n      // Check if component instance was destroyed before `ngAfterViewInit` call (#110).\n      // Here, `this.instance` is still not initialized and so additional flag is needed.\n      if (this._destroyed) {\n        return;\n      }\n\n      this.ngZone.runOutsideAngular(this.createEditor.bind(this));\n    }).catch(window.console.error);\n  }\n\n  ngOnDestroy() {\n    this._destroyed = true;\n    this.ngZone.runOutsideAngular(() => {\n      if (this.instance) {\n        this.instance.destroy();\n        this.instance = null;\n      }\n    });\n  }\n\n  writeValue(value) {\n    this.data = value;\n  }\n\n  registerOnChange(callback) {\n    this.onChange = callback;\n  }\n\n  registerOnTouched(callback) {\n    this.onTouched = callback;\n  }\n\n  createEditor() {\n    var _a, _b;\n\n    const element = document.createElement(this.tagName);\n    this.elementRef.nativeElement.appendChild(element);\n    const userInstanceReadyCallback = (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.on) === null || _b === void 0 ? void 0 : _b.instanceReady;\n    const defaultConfig = {\n      delayIfDetached: true\n    };\n    const config = Object.assign(Object.assign({}, defaultConfig), this.config);\n\n    if (typeof config.on === 'undefined') {\n      config.on = {};\n    }\n\n    config.on.instanceReady = evt => {\n      const editor = evt.editor;\n      this.instance = editor; // Read only state may change during instance initialization.\n\n      this.readOnly = this._readOnly !== null ? this._readOnly : this.instance.readOnly;\n      this.subscribe(this.instance);\n      const undo = editor.undoManager;\n\n      if (this.data !== null) {\n        undo && undo.lock();\n        editor.setData(this.data, {\n          callback: () => {\n            // Locking undoManager prevents 'change' event.\n            // Trigger it manually to updated bound data.\n            if (this.data !== editor.getData()) {\n              undo ? editor.fire('change') : editor.fire('dataReady');\n            }\n\n            undo && undo.unlock();\n            this.ngZone.run(() => {\n              if (typeof userInstanceReadyCallback === 'function') {\n                userInstanceReadyCallback(evt);\n              }\n\n              this.ready.emit(evt);\n            });\n          }\n        });\n      } else {\n        this.ngZone.run(() => {\n          if (typeof userInstanceReadyCallback === 'function') {\n            userInstanceReadyCallback(evt);\n          }\n\n          this.ready.emit(evt);\n        });\n      }\n    };\n\n    if (this.type === \"inline\"\n    /* INLINE */\n    ) {\n      CKEDITOR.inline(element, config);\n    } else {\n      CKEDITOR.replace(element, config);\n    }\n  }\n\n  subscribe(editor) {\n    editor.on('focus', evt => {\n      this.ngZone.run(() => {\n        this.focus.emit(evt);\n      });\n    });\n    editor.on('paste', evt => {\n      this.ngZone.run(() => {\n        this.paste.emit(evt);\n      });\n    });\n    editor.on('afterPaste', evt => {\n      this.ngZone.run(() => {\n        this.afterPaste.emit(evt);\n      });\n    });\n    editor.on('dragend', evt => {\n      this.ngZone.run(() => {\n        this.dragEnd.emit(evt);\n      });\n    });\n    editor.on('dragstart', evt => {\n      this.ngZone.run(() => {\n        this.dragStart.emit(evt);\n      });\n    });\n    editor.on('drop', evt => {\n      this.ngZone.run(() => {\n        this.drop.emit(evt);\n      });\n    });\n    editor.on('fileUploadRequest', evt => {\n      this.ngZone.run(() => {\n        this.fileUploadRequest.emit(evt);\n      });\n    });\n    editor.on('fileUploadResponse', evt => {\n      this.ngZone.run(() => {\n        this.fileUploadResponse.emit(evt);\n      });\n    });\n    editor.on('blur', evt => {\n      this.ngZone.run(() => {\n        if (this.onTouched) {\n          this.onTouched();\n        }\n\n        this.blur.emit(evt);\n      });\n    });\n    editor.on('dataReady', this.propagateChange, this);\n\n    if (this.instance.undoManager) {\n      editor.on('change', this.propagateChange, this);\n    } // If 'undo' plugin is not loaded, listen to 'selectionCheck' event instead. (#54).\n    else {\n      editor.on('selectionCheck', this.propagateChange, this);\n    }\n  }\n\n  propagateChange(event) {\n    this.ngZone.run(() => {\n      const newData = this.instance.getData();\n\n      if (event.name === 'change') {\n        this.change.emit(event);\n      } else if (event.name === 'dataReady') {\n        this.dataReady.emit(event);\n      }\n\n      if (newData === this.data) {\n        return;\n      }\n\n      this._data = newData;\n      this.dataChange.emit(newData);\n\n      if (this.onChange) {\n        this.onChange(newData);\n      }\n    });\n  }\n\n}\n\nCKEditorComponent.ɵfac = function CKEditorComponent_Factory(t) {\n  return new (t || CKEditorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nCKEditorComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: CKEditorComponent,\n  selectors: [[\"ckeditor\"]],\n  inputs: {\n    editorUrl: \"editorUrl\",\n    tagName: \"tagName\",\n    type: \"type\",\n    data: \"data\",\n    readOnly: \"readOnly\",\n    config: \"config\"\n  },\n  outputs: {\n    namespaceLoaded: \"namespaceLoaded\",\n    ready: \"ready\",\n    dataReady: \"dataReady\",\n    change: \"change\",\n    dataChange: \"dataChange\",\n    dragStart: \"dragStart\",\n    dragEnd: \"dragEnd\",\n    drop: \"drop\",\n    fileUploadResponse: \"fileUploadResponse\",\n    fileUploadRequest: \"fileUploadRequest\",\n    focus: \"focus\",\n    paste: \"paste\",\n    afterPaste: \"afterPaste\",\n    blur: \"blur\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CKEditorComponent),\n    multi: true\n  }])],\n  decls: 1,\n  vars: 0,\n  template: function CKEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, CKEditorComponent_ng_template_0_Template, 0, 0, \"ng-template\");\n    }\n  },\n  encapsulation: 2\n});\n\nCKEditorComponent.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: NgZone\n}];\n\nCKEditorComponent.propDecorators = {\n  config: [{\n    type: Input\n  }],\n  editorUrl: [{\n    type: Input\n  }],\n  tagName: [{\n    type: Input\n  }],\n  type: [{\n    type: Input\n  }],\n  data: [{\n    type: Input\n  }],\n  readOnly: [{\n    type: Input\n  }],\n  namespaceLoaded: [{\n    type: Output\n  }],\n  ready: [{\n    type: Output\n  }],\n  dataReady: [{\n    type: Output\n  }],\n  change: [{\n    type: Output\n  }],\n  dataChange: [{\n    type: Output\n  }],\n  dragStart: [{\n    type: Output\n  }],\n  dragEnd: [{\n    type: Output\n  }],\n  drop: [{\n    type: Output\n  }],\n  fileUploadResponse: [{\n    type: Output\n  }],\n  fileUploadRequest: [{\n    type: Output\n  }],\n  focus: [{\n    type: Output\n  }],\n  paste: [{\n    type: Output\n  }],\n  afterPaste: [{\n    type: Output\n  }],\n  blur: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CKEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ckeditor',\n      template: '<ng-template></ng-template>',\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => CKEditorComponent),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    editorUrl: [{\n      type: Input\n    }],\n    tagName: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    namespaceLoaded: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    dataReady: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    dataChange: [{\n      type: Output\n    }],\n    dragStart: [{\n      type: Output\n    }],\n    dragEnd: [{\n      type: Output\n    }],\n    drop: [{\n      type: Output\n    }],\n    fileUploadResponse: [{\n      type: Output\n    }],\n    fileUploadRequest: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    paste: [{\n      type: Output\n    }],\n    afterPaste: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    data: [{\n      type: Input\n    }],\n    readOnly: [{\n      type: Input\n    }],\n    config: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n\nclass CKEditorModule {}\n\nCKEditorModule.ɵfac = function CKEditorModule_Factory(t) {\n  return new (t || CKEditorModule)();\n};\n\nCKEditorModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: CKEditorModule\n});\nCKEditorModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [FormsModule, CommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CKEditorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [FormsModule, CommonModule],\n      declarations: [CKEditorComponent],\n      exports: [CKEditorComponent]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CKEditorModule, {\n    declarations: function () {\n      return [CKEditorComponent];\n    },\n    imports: function () {\n      return [FormsModule, CommonModule];\n    },\n    exports: function () {\n      return [CKEditorComponent];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CKEditorComponent, CKEditorModule };","map":{"version":3,"names":["EventEmitter","Component","forwardRef","ElementRef","NgZone","Input","Output","NgModule","CommonModule","NG_VALUE_ACCESSOR","FormsModule","getEditorNamespace","ɵngcc0","CKEditorComponent_ng_template_0_Template","rf","ctx","CKEditorComponent","constructor","elementRef","ngZone","editorUrl","tagName","type","namespaceLoaded","ready","dataReady","change","dataChange","dragStart","dragEnd","drop","fileUploadResponse","fileUploadRequest","focus","paste","afterPaste","blur","_readOnly","_data","_destroyed","data","instance","setData","getData","readOnly","isReadOnly","setReadOnly","ngAfterViewInit","namespace","emit","then","runOutsideAngular","createEditor","bind","catch","window","console","error","ngOnDestroy","destroy","writeValue","value","registerOnChange","callback","onChange","registerOnTouched","onTouched","_a","_b","element","document","createElement","nativeElement","appendChild","userInstanceReadyCallback","config","on","instanceReady","defaultConfig","delayIfDetached","Object","assign","evt","editor","subscribe","undo","undoManager","lock","fire","unlock","run","CKEDITOR","inline","replace","propagateChange","event","newData","name","ɵfac","CKEditorComponent_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","selectors","inputs","outputs","features","ɵɵProvidersFeature","provide","useExisting","multi","decls","vars","template","CKEditorComponent_Template","ɵɵtemplate","encapsulation","ctorParameters","propDecorators","ngDevMode","ɵsetClassMetadata","args","selector","providers","CKEditorModule","CKEditorModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"sources":["C:/Users/erdem/OneDrive/Desktop/ng-app/node_modules/ckeditor4-angular/__ivy_ngcc__/fesm2015/ckeditor4-angular.js"],"sourcesContent":["import { EventEmitter, Component, forwardRef, ElementRef, NgZone, Input, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { getEditorNamespace } from 'ckeditor4-integrations-common';\n\n/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\nimport * as ɵngcc0 from '@angular/core';\n\nfunction CKEditorComponent_ng_template_0_Template(rf, ctx) { }\nclass CKEditorComponent {\n    constructor(elementRef, ngZone) {\n        this.elementRef = elementRef;\n        this.ngZone = ngZone;\n        /**\n         * CKEditor 4 script url address. Script will be loaded only if CKEDITOR namespace is missing.\n         *\n         * Defaults to 'https://cdn.ckeditor.com/4.20.0/standard-all/ckeditor.js'\n         */\n        this.editorUrl = 'https://cdn.ckeditor.com/4.20.0/standard-all/ckeditor.js';\n        /**\n         * Tag name of the editor component.\n         *\n         * The default tag is `textarea`.\n         */\n        this.tagName = 'textarea';\n        /**\n         * The type of the editor interface.\n         *\n         * By default editor interface will be initialized as `classic` editor.\n         * You can also choose to create an editor with `inline` interface type instead.\n         *\n         * See https://ckeditor.com/docs/ckeditor4/latest/guide/dev_uitypes.html\n         * and https://ckeditor.com/docs/ckeditor4/latest/examples/fixedui.html\n         * to learn more.\n         */\n        this.type = \"classic\" /* CLASSIC */;\n        /**\n         * Fired when the CKEDITOR https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR.html namespace\n         * is loaded. It only triggers once, no matter how many CKEditor 4 components are initialised.\n         * Can be used for convenient changes in the namespace, e.g. for adding external plugins.\n         */\n        this.namespaceLoaded = new EventEmitter();\n        /**\n         * Fires when the editor is ready. It corresponds with the `editor#instanceReady`\n         * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#event-instanceReady\n         * event.\n         */\n        this.ready = new EventEmitter();\n        /**\n         * Fires when the editor data is loaded, e.g. after calling setData()\n         * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#method-setData\n         * editor's method. It corresponds with the `editor#dataReady`\n         * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#event-dataReady event.\n         */\n        this.dataReady = new EventEmitter();\n        /**\n         * Fires when the content of the editor has changed. It corresponds with the `editor#change`\n         * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#event-change\n         * event. For performance reasons this event may be called even when data didn't really changed.\n         * Please note that this event will only be fired when `undo` plugin is loaded. If you need to\n         * listen for editor changes (e.g. for two-way data binding), use `dataChange` event instead.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Fires when the content of the editor has changed. In contrast to `change` - only emits when\n         * data really changed thus can be successfully used with `[data]` and two way `[(data)]` binding.\n         *\n         * See more: https://angular.io/guide/template-syntax#two-way-binding---\n         */\n        this.dataChange = new EventEmitter();\n        /**\n         * Fires when the native dragStart event occurs. It corresponds with the `editor#dragstart`\n         * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#event-dragstart\n         * event.\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * Fires when the native dragEnd event occurs. It corresponds with the `editor#dragend`\n         * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#event-dragend\n         * event.\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * Fires when the native drop event occurs. It corresponds with the `editor#drop`\n         * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#event-drop\n         * event.\n         */\n        this.drop = new EventEmitter();\n        /**\n         * Fires when the file loader response is received. It corresponds with the `editor#fileUploadResponse`\n         * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#event-fileUploadResponse\n         * event.\n         */\n        this.fileUploadResponse = new EventEmitter();\n        /**\n         * Fires when the file loader should send XHR. It corresponds with the `editor#fileUploadRequest`\n         * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#event-fileUploadRequest\n         * event.\n         */\n        this.fileUploadRequest = new EventEmitter();\n        /**\n         * Fires when the editing area of the editor is focused. It corresponds with the `editor#focus`\n         * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#event-focus\n         * event.\n         */\n        this.focus = new EventEmitter();\n        /**\n         * Fires after the user initiated a paste action, but before the data is inserted.\n         * It corresponds with the `editor#paste`\n         * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#event-paste\n         * event.\n         */\n        this.paste = new EventEmitter();\n        /**\n         * Fires after the `paste` event if content was modified. It corresponds with the `editor#afterPaste`\n         * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#event-afterPaste\n         * event.\n         */\n        this.afterPaste = new EventEmitter();\n        /**\n         * Fires when the editing view of the editor is blurred. It corresponds with the `editor#blur`\n         * https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#event-blur\n         * event.\n         */\n        this.blur = new EventEmitter();\n        /**\n         * If the component is read–only before the editor instance is created, it remembers that state,\n         * so the editor can become read–only once it is ready.\n         */\n        this._readOnly = null;\n        this._data = null;\n        this._destroyed = false;\n    }\n    /**\n     * Keeps track of the editor's data.\n     *\n     * It's also decorated as an input which is useful when not using the ngModel.\n     *\n     * See https://angular.io/api/forms/NgModel to learn more.\n     */\n    set data(data) {\n        if (data === this._data) {\n            return;\n        }\n        if (this.instance) {\n            this.instance.setData(data);\n            // Data may be changed by ACF.\n            this._data = this.instance.getData();\n            return;\n        }\n        this._data = data;\n    }\n    get data() {\n        return this._data;\n    }\n    /**\n     * When set to `true`, the editor becomes read-only.\n     *\n     * See https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_editor.html#property-readOnly\n     * to learn more.\n     */\n    set readOnly(isReadOnly) {\n        if (this.instance) {\n            this.instance.setReadOnly(isReadOnly);\n            return;\n        }\n        // Delay setting read-only state until editor initialization.\n        this._readOnly = isReadOnly;\n    }\n    get readOnly() {\n        if (this.instance) {\n            return this.instance.readOnly;\n        }\n        return this._readOnly;\n    }\n    ngAfterViewInit() {\n        getEditorNamespace(this.editorUrl, namespace => {\n            this.namespaceLoaded.emit(namespace);\n        }).then(() => {\n            // Check if component instance was destroyed before `ngAfterViewInit` call (#110).\n            // Here, `this.instance` is still not initialized and so additional flag is needed.\n            if (this._destroyed) {\n                return;\n            }\n            this.ngZone.runOutsideAngular(this.createEditor.bind(this));\n        }).catch(window.console.error);\n    }\n    ngOnDestroy() {\n        this._destroyed = true;\n        this.ngZone.runOutsideAngular(() => {\n            if (this.instance) {\n                this.instance.destroy();\n                this.instance = null;\n            }\n        });\n    }\n    writeValue(value) {\n        this.data = value;\n    }\n    registerOnChange(callback) {\n        this.onChange = callback;\n    }\n    registerOnTouched(callback) {\n        this.onTouched = callback;\n    }\n    createEditor() {\n        var _a, _b;\n        const element = document.createElement(this.tagName);\n        this.elementRef.nativeElement.appendChild(element);\n        const userInstanceReadyCallback = (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.on) === null || _b === void 0 ? void 0 : _b.instanceReady;\n        const defaultConfig = {\n            delayIfDetached: true\n        };\n        const config = Object.assign(Object.assign({}, defaultConfig), this.config);\n        if (typeof config.on === 'undefined') {\n            config.on = {};\n        }\n        config.on.instanceReady = evt => {\n            const editor = evt.editor;\n            this.instance = editor;\n            // Read only state may change during instance initialization.\n            this.readOnly = this._readOnly !== null ? this._readOnly : this.instance.readOnly;\n            this.subscribe(this.instance);\n            const undo = editor.undoManager;\n            if (this.data !== null) {\n                undo && undo.lock();\n                editor.setData(this.data, { callback: () => {\n                        // Locking undoManager prevents 'change' event.\n                        // Trigger it manually to updated bound data.\n                        if (this.data !== editor.getData()) {\n                            undo ? editor.fire('change') : editor.fire('dataReady');\n                        }\n                        undo && undo.unlock();\n                        this.ngZone.run(() => {\n                            if (typeof userInstanceReadyCallback === 'function') {\n                                userInstanceReadyCallback(evt);\n                            }\n                            this.ready.emit(evt);\n                        });\n                    } });\n            }\n            else {\n                this.ngZone.run(() => {\n                    if (typeof userInstanceReadyCallback === 'function') {\n                        userInstanceReadyCallback(evt);\n                    }\n                    this.ready.emit(evt);\n                });\n            }\n        };\n        if (this.type === \"inline\" /* INLINE */) {\n            CKEDITOR.inline(element, config);\n        }\n        else {\n            CKEDITOR.replace(element, config);\n        }\n    }\n    subscribe(editor) {\n        editor.on('focus', evt => {\n            this.ngZone.run(() => {\n                this.focus.emit(evt);\n            });\n        });\n        editor.on('paste', evt => {\n            this.ngZone.run(() => {\n                this.paste.emit(evt);\n            });\n        });\n        editor.on('afterPaste', evt => {\n            this.ngZone.run(() => {\n                this.afterPaste.emit(evt);\n            });\n        });\n        editor.on('dragend', evt => {\n            this.ngZone.run(() => {\n                this.dragEnd.emit(evt);\n            });\n        });\n        editor.on('dragstart', evt => {\n            this.ngZone.run(() => {\n                this.dragStart.emit(evt);\n            });\n        });\n        editor.on('drop', evt => {\n            this.ngZone.run(() => {\n                this.drop.emit(evt);\n            });\n        });\n        editor.on('fileUploadRequest', evt => {\n            this.ngZone.run(() => {\n                this.fileUploadRequest.emit(evt);\n            });\n        });\n        editor.on('fileUploadResponse', evt => {\n            this.ngZone.run(() => {\n                this.fileUploadResponse.emit(evt);\n            });\n        });\n        editor.on('blur', evt => {\n            this.ngZone.run(() => {\n                if (this.onTouched) {\n                    this.onTouched();\n                }\n                this.blur.emit(evt);\n            });\n        });\n        editor.on('dataReady', this.propagateChange, this);\n        if (this.instance.undoManager) {\n            editor.on('change', this.propagateChange, this);\n        }\n        // If 'undo' plugin is not loaded, listen to 'selectionCheck' event instead. (#54).\n        else {\n            editor.on('selectionCheck', this.propagateChange, this);\n        }\n    }\n    propagateChange(event) {\n        this.ngZone.run(() => {\n            const newData = this.instance.getData();\n            if (event.name === 'change') {\n                this.change.emit(event);\n            }\n            else if (event.name === 'dataReady') {\n                this.dataReady.emit(event);\n            }\n            if (newData === this.data) {\n                return;\n            }\n            this._data = newData;\n            this.dataChange.emit(newData);\n            if (this.onChange) {\n                this.onChange(newData);\n            }\n        });\n    }\n}\nCKEditorComponent.ɵfac = function CKEditorComponent_Factory(t) { return new (t || CKEditorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCKEditorComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CKEditorComponent, selectors: [[\"ckeditor\"]], inputs: { editorUrl: \"editorUrl\", tagName: \"tagName\", type: \"type\", data: \"data\", readOnly: \"readOnly\", config: \"config\" }, outputs: { namespaceLoaded: \"namespaceLoaded\", ready: \"ready\", dataReady: \"dataReady\", change: \"change\", dataChange: \"dataChange\", dragStart: \"dragStart\", dragEnd: \"dragEnd\", drop: \"drop\", fileUploadResponse: \"fileUploadResponse\", fileUploadRequest: \"fileUploadRequest\", focus: \"focus\", paste: \"paste\", afterPaste: \"afterPaste\", blur: \"blur\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => CKEditorComponent),\n                multi: true\n            }\n        ])], decls: 1, vars: 0, template: function CKEditorComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, CKEditorComponent_ng_template_0_Template, 0, 0, \"ng-template\");\n    } }, encapsulation: 2 });\nCKEditorComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nCKEditorComponent.propDecorators = {\n    config: [{ type: Input }],\n    editorUrl: [{ type: Input }],\n    tagName: [{ type: Input }],\n    type: [{ type: Input }],\n    data: [{ type: Input }],\n    readOnly: [{ type: Input }],\n    namespaceLoaded: [{ type: Output }],\n    ready: [{ type: Output }],\n    dataReady: [{ type: Output }],\n    change: [{ type: Output }],\n    dataChange: [{ type: Output }],\n    dragStart: [{ type: Output }],\n    dragEnd: [{ type: Output }],\n    drop: [{ type: Output }],\n    fileUploadResponse: [{ type: Output }],\n    fileUploadRequest: [{ type: Output }],\n    focus: [{ type: Output }],\n    paste: [{ type: Output }],\n    afterPaste: [{ type: Output }],\n    blur: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CKEditorComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ckeditor',\n                template: '<ng-template></ng-template>',\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef(() => CKEditorComponent),\n                        multi: true\n                    }\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { editorUrl: [{\n            type: Input\n        }], tagName: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], namespaceLoaded: [{\n            type: Output\n        }], ready: [{\n            type: Output\n        }], dataReady: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], dataChange: [{\n            type: Output\n        }], dragStart: [{\n            type: Output\n        }], dragEnd: [{\n            type: Output\n        }], drop: [{\n            type: Output\n        }], fileUploadResponse: [{\n            type: Output\n        }], fileUploadRequest: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], paste: [{\n            type: Output\n        }], afterPaste: [{\n            type: Output\n        }], blur: [{\n            type: Output\n        }], data: [{\n            type: Input\n        }], readOnly: [{\n            type: Input\n        }], config: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\nclass CKEditorModule {\n}\nCKEditorModule.ɵfac = function CKEditorModule_Factory(t) { return new (t || CKEditorModule)(); };\nCKEditorModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CKEditorModule });\nCKEditorModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [FormsModule, CommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CKEditorModule, [{\n        type: NgModule,\n        args: [{\n                imports: [FormsModule, CommonModule],\n                declarations: [CKEditorComponent],\n                exports: [CKEditorComponent]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CKEditorModule, { declarations: function () { return [CKEditorComponent]; }, imports: function () { return [FormsModule, CommonModule]; }, exports: function () { return [CKEditorComponent]; } }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CKEditorComponent, CKEditorModule };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}